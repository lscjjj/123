{"remainingRequest":"F:\\html\\123\\node_modules\\thread-loader\\dist\\cjs.js!F:\\html\\123\\node_modules\\babel-loader\\lib\\index.js!F:\\html\\123\\node_modules\\eslint-loader\\index.js??ref--12-0!F:\\html\\123\\src\\utils\\THREEUtils.js","dependencies":[{"path":"F:\\html\\123\\src\\utils\\THREEUtils.js","mtime":1648086077314},{"path":"F:\\html\\123\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\html\\123\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\html\\123\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\html\\123\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIC8vIGdldCByZWFsIHNpemUgcG9zaXRpb24KICBnZXRSZWFsU2l6ZVBvcyh7CiAgICBjYW1lcmEsCiAgICByZW5kZXJlcgogIH0pIHsKICAgIGNvbnN0IGhlaWdodCA9IHJlbmRlcmVyLmdldFNpemUoKS5oZWlnaHQ7CiAgICBjb25zdCB2Rk9WID0gY2FtZXJhLmZvdiAqIE1hdGguUEkgLyAxODA7CiAgICBjb25zdCBkaXN0ID0gaGVpZ2h0IC8gKDIgKiBNYXRoLnRhbih2Rk9WIC8gMikpOwogICAgcmV0dXJuIGNhbWVyYS5wb3NpdGlvbi56IC0gZGlzdDsKICB9LAoKICBzY2FsZShkaXNwbGF5LCBzY2FsZSkgewogICAgZGlzcGxheS5zY2FsZS54ID0gc2NhbGU7CiAgICBkaXNwbGF5LnNjYWxlLnkgPSBzY2FsZTsKICB9Cgp9Ow=="},{"version":3,"sources":["F:/html/123/src/utils/THREEUtils.js"],"names":["getRealSizePos","camera","renderer","height","getSize","vFOV","fov","Math","PI","dist","tan","position","z","scale","display","x","y"],"mappings":"AAAA,eAAe;AACb;AACAA,EAAAA,cAAc,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAuB;AACnC,UAAMC,MAAM,GAAGD,QAAQ,CAACE,OAAT,GAAmBD,MAAlC;AACA,UAAME,IAAI,GAAIJ,MAAM,CAACK,GAAP,GAAaC,IAAI,CAACC,EAAnB,GAAyB,GAAtC;AACA,UAAMC,IAAI,GAAGN,MAAM,IAAI,IAAII,IAAI,CAACG,GAAL,CAASL,IAAI,GAAG,CAAhB,CAAR,CAAnB;AAEA,WAAOJ,MAAM,CAACU,QAAP,CAAgBC,CAAhB,GAAoBH,IAA3B;AACD,GARY;;AAUbI,EAAAA,KAAK,CAACC,OAAD,EAAUD,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACD,KAAR,CAAcE,CAAd,GAAkBF,KAAlB;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcG,CAAd,GAAkBH,KAAlB;AACD;;AAbY,CAAf","sourcesContent":["export default {\r\n  // get real size position\r\n  getRealSizePos({ camera, renderer }) {\r\n    const height = renderer.getSize().height;\r\n    const vFOV = (camera.fov * Math.PI) / 180;\r\n    const dist = height / (2 * Math.tan(vFOV / 2));\r\n\r\n    return camera.position.z - dist;\r\n  },\r\n\r\n  scale(display, scale) {\r\n    display.scale.x = scale;\r\n    display.scale.y = scale;\r\n  }\r\n};\r\n"]}]}